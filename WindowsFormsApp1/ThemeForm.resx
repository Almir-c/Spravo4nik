<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>